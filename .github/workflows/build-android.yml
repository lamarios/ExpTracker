# This is a basic workflow to help you get started with Actions
name: Build Android app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: flutter analyze and build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      ANDROID_KEY_FILE: /tmp/key.properties
    #env:
    #  JAVA_VERSION: "11.0"
    #  FLUTTER_VERSION: "2.5.3"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.11
      - name: Decode and write keystore file
        run: echo ${{ secrets.ANDROID_KEYSTORE_BASE64 }} | base64 --decode > /tmp/keystore.jks

      - name: Create key.properties file
        run: |
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> key.properties
          echo "storeFile=/tmp/keystore.jks" >> /tmp/key.properties
      - run: set -e
      - name: Build app
        working-directory: src/main/app
        run: |
          git submodule init
          git submodule update
          ./submodules/flutter/bin/flutter doctor
          ./submodules/flutter/bin/flutter config --no-analytics
          ./submodules/flutter/bin/flutter pub get
          ./submodules/flutter/bin/flutter build apk --split-per-abi
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: src/main/app/build/app/outputs/flutter-apk